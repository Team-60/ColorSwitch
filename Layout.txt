Class App (My main screen) [Controller]
    Fields:
        - Database
    Functions:
        - addAssets
        - formDatabase
        - newGame
        - loadGame
        - restartGame (refresh all states except the player's info)
        - leaderboard
        - exit
    Exceptions:
    Extends:
    Implements:

Class Database (Load game screen / Leaderboard in show) [Controller] <Generic>
    Fields:
        - NumParam (Overriding param)
        - ArrayList<Field>
    Functions:
        + form
        + show
        + update
        + giveId
    Exceptions:
        Exception (IO / ClassNotFound)
    Extends:
    Implements:

Class Game:
    Fields:
        - database (Association)
        - Player (Keep Info) (Player and game elements interact through ball) (Association) (As a constructor param)
        - Game Elements
        - ball
        - Mid line
        + starsForRestart (static)
        + numElements (number of elements to spawn) (static)
    Functions:
        + refreshGameElements (ensure proper pairings between stars / obstacles / switches) (discard) (reflectChanges in gui counterpart)
        - moveScreen (apply offset)
        + registerJump (relocation & calls move screen)
        + checkAndUpdate (checks for interaction & score updation)
        + pause (write into file)
        + resume (read from file)
        + save (write to load file)
    Exceptions:
        ObstacleCollision
        FellDown
        NotEnoughStarsForRestart
    Extends:
    Implements:
        Serializable

Class Player:
    Fields:
        - name
        - id
        - score
        - highscore
    Functions:
        + incrementScore
    Exceptions:
    Extends:
    Implements:
        Serializable

Class Ball:
    Fields:
        - x
        - y
        - radius
        - color
        - velocity
        - gravity
        - jumpSpeed
    Functions:
        + jump : int
        + getPosition
    Exceptions:
    Extends:
    Implements:
        Serializable

Class GameElements: (Abstract)
    Fields:
        - x
        - y
        - closestSafeDist
    Functions:
        + applyOffset
        + spawn (Abstract)
        + refresh (Abstract)
        + checkCollision (Abstract)
    Exceptions:
    Extends:
    Implements:
        Serializable

Class Star:
    Fields:
        closestSafeDist static
        points static
    Functions:
        Overriding Abstract Methods
    Exceptions:
    Extends:
        GameElements
    Implements:

Class SwitchColor:
    Fields:
        closestSafeDist static
        predefined color
    Functions:
        Overriding Abstract Methods
    Exceptions:
    Extends:
        GameElements
    Implements:

Class Obstacle: (Abstract)
    Fields:
        transalation speed
        rotation speed
    Functions:
        Abstract
    Exceptions:
    Extends:
        GameElements
    Implements:

Class ObsCircle:
    Fields:
        closestSafeDist static
        # radius
    Functions:
        spawn
        + refresh
        checkCollision
    Exceptions:
    Extends:
        Obstacle
    Implements:

Class ObsDoubleCircle:
        Fields:
            # radiusOut
        Functions: (Override)
            spawn
            + refresh
            checkCollision
        Exceptions:
        Extends:
            Obstacle
        Implements: